// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\tb_SYSTEM\SYSTEM_ip_src_acc2.v
// 
// Generated by MATLAB 9.13 and HDL Coder 4.0
// 
// Copyright (c) 2023, Alexei Evsenin, evsenin@gmail.com
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: SYSTEM_ip_src_acc2
// Source Path: tb_SYSTEM/SYSTEM/Temperature and Voltage Sensor/acc2
// Hierarchy Level: 2
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module SYSTEM_ip_src_acc2
          (clk,
           reset_x,
           In,
           Out);


  input   clk;
  input   reset_x;
  input   signed [15:0] In;  // int16
  output  signed [15:0] Out;  // int16


  wire signed [15:0] Sum1_out1;  // int16
  reg signed [15:0] Delay2_out1;  // int16
  wire signed [16:0] Sum2_sub_temp;  // sfix17
  wire signed [16:0] Sum2_1;  // sfix17
  wire signed [16:0] Sum2_2;  // sfix17
  wire signed [15:0] Sum2_out1;  // int16
  wire signed [15:0] Bit_Shift2_out1;  // int16
  wire signed [16:0] Sum1_add_temp;  // sfix17
  wire signed [16:0] Sum1_1;  // sfix17
  wire signed [16:0] Sum1_2;  // sfix17
  reg signed [15:0] Delay1_out1;  // int16


  always @(posedge clk or posedge reset_x)
    begin : Delay2_process
      if (reset_x == 1'b1) begin
        Delay2_out1 <= 16'sb0000000000000000;
      end
      else begin
        Delay2_out1 <= Sum1_out1;
      end
    end


  assign Sum2_1 = {In[15], In};
  assign Sum2_2 = {Delay2_out1[15], Delay2_out1};
  assign Sum2_sub_temp = Sum2_1 - Sum2_2;
  assign Sum2_out1 = ((Sum2_sub_temp[16] == 1'b0) && (Sum2_sub_temp[15] != 1'b0) ? 16'sb0111111111111111 :
              ((Sum2_sub_temp[16] == 1'b1) && (Sum2_sub_temp[15] != 1'b1) ? 16'sb1000000000000000 :
              $signed(Sum2_sub_temp[15:0])));


  assign Bit_Shift2_out1 = Sum2_out1 >>> 8'd6;


  assign Sum1_1 = {Bit_Shift2_out1[15], Bit_Shift2_out1};
  assign Sum1_2 = {Delay2_out1[15], Delay2_out1};
  assign Sum1_add_temp = Sum1_1 + Sum1_2;
  assign Sum1_out1 = ((Sum1_add_temp[16] == 1'b0) && (Sum1_add_temp[15] != 1'b0) ? 16'sb0111111111111111 :
              ((Sum1_add_temp[16] == 1'b1) && (Sum1_add_temp[15] != 1'b1) ? 16'sb1000000000000000 :
              $signed(Sum1_add_temp[15:0])));


  always @(posedge clk or posedge reset_x)
    begin : Delay1_process
      if (reset_x == 1'b1) begin
        Delay1_out1 <= 16'sb0000000000000000;
      end
      else begin
        Delay1_out1 <= Sum1_out1;
      end
    end


  assign Out = Delay1_out1;

endmodule  // SYSTEM_ip_src_acc2

