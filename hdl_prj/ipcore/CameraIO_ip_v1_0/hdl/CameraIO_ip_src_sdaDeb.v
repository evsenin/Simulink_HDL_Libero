// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\tb_CameraIO\CameraIO_ip_src_sdaDeb.v
// 
// Generated by MATLAB 9.13 and HDL Coder 4.0
// 
// Copyright (c) 2023, Alexei Evsenin, evsenin@gmail.com
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: CameraIO_ip_src_sdaDeb
// Source Path: tb_CameraIO/CameraIO/TCA6424A/sdaDeb
// Hierarchy Level: 2
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module CameraIO_ip_src_sdaDeb
          (clk,
           reset_x,
           inp,
           out);


  input   clk;
  input   reset_x;
  input   inp;
  output  out;


  reg  Unit_Delay_out1;
  reg  Unit_Delay1_out1;
  reg  Unit_Delay2_out1;
  reg  Unit_Delay3_out1;
  reg  Unit_Delay4_out1;
  reg  Unit_Delay5_out1;
  reg  Unit_Delay6_out1;
  reg  Unit_Delay7_out1;
  wire OR_out1;
  wire NOT_out1;
  wire AND_out1;
  wire Chart_out1;


  always @(posedge clk or posedge reset_x)
    begin : Unit_Delay_process
      if (reset_x == 1'b1) begin
        Unit_Delay_out1 <= 1'b0;
      end
      else begin
        Unit_Delay_out1 <= inp;
      end
    end


  always @(posedge clk or posedge reset_x)
    begin : Unit_Delay1_process
      if (reset_x == 1'b1) begin
        Unit_Delay1_out1 <= 1'b0;
      end
      else begin
        Unit_Delay1_out1 <= Unit_Delay_out1;
      end
    end


  always @(posedge clk or posedge reset_x)
    begin : Unit_Delay2_process
      if (reset_x == 1'b1) begin
        Unit_Delay2_out1 <= 1'b0;
      end
      else begin
        Unit_Delay2_out1 <= Unit_Delay1_out1;
      end
    end


  always @(posedge clk or posedge reset_x)
    begin : Unit_Delay3_process
      if (reset_x == 1'b1) begin
        Unit_Delay3_out1 <= 1'b0;
      end
      else begin
        Unit_Delay3_out1 <= Unit_Delay2_out1;
      end
    end


  always @(posedge clk or posedge reset_x)
    begin : Unit_Delay4_process
      if (reset_x == 1'b1) begin
        Unit_Delay4_out1 <= 1'b0;
      end
      else begin
        Unit_Delay4_out1 <= Unit_Delay3_out1;
      end
    end


  always @(posedge clk or posedge reset_x)
    begin : Unit_Delay5_process
      if (reset_x == 1'b1) begin
        Unit_Delay5_out1 <= 1'b0;
      end
      else begin
        Unit_Delay5_out1 <= Unit_Delay4_out1;
      end
    end


  always @(posedge clk or posedge reset_x)
    begin : Unit_Delay6_process
      if (reset_x == 1'b1) begin
        Unit_Delay6_out1 <= 1'b0;
      end
      else begin
        Unit_Delay6_out1 <= Unit_Delay5_out1;
      end
    end


  always @(posedge clk or posedge reset_x)
    begin : Unit_Delay7_process
      if (reset_x == 1'b1) begin
        Unit_Delay7_out1 <= 1'b0;
      end
      else begin
        Unit_Delay7_out1 <= Unit_Delay6_out1;
      end
    end


  assign OR_out1 = Unit_Delay6_out1 | (Unit_Delay5_out1 | (Unit_Delay4_out1 | (Unit_Delay3_out1 | (Unit_Delay2_out1 | (Unit_Delay1_out1 | (Unit_Delay7_out1 | Unit_Delay_out1))))));


  assign NOT_out1 =  ~ OR_out1;


  assign AND_out1 = Unit_Delay_out1 & (Unit_Delay1_out1 & (Unit_Delay2_out1 & (Unit_Delay3_out1 & (Unit_Delay4_out1 & (Unit_Delay5_out1 & (Unit_Delay7_out1 & Unit_Delay6_out1))))));


  CameraIO_ip_src_Chart u_Chart (.clk(clk),
                                 .reset_x(reset_x),
                                 .nul(NOT_out1),
                                 .one(AND_out1),
                                 .y(Chart_out1)
                                 );
  assign out = Chart_out1;

endmodule  // CameraIO_ip_src_sdaDeb

